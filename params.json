{"name":"CryptoSage","tagline":"Cryptography Implementation in SageMath.","body":"# CryptoSage\r\n\r\nCryptography Implementation in SageMath (http://www.sagemath.org).\r\n\r\nThis project is for students and engineers interested in cryptography.\r\nYou can try and test these cryptography algorithms with real parameters and full key lengths.\r\nWe write cryptography algorithms in SageMath.\r\n\r\nWe hope to implement all popular public key schemes:\r\n\r\n* Integer-Factoring-Based Cryptosystems including RSA/Rabin/Paillier, etc. \r\n* Descrete-Log-Based Cryptosystems including DH/ElGamal/DSA, etc.\r\n* ECC (Elliptic curve cryptography)\r\n* Pairing-Based Cryptography\r\n* Lattice-Based Cryptography\r\n* Coding-Based Cryptography\r\n\r\n\r\n### Elliptic Curve Cryptography\r\n\r\n* EC domain parameters: `prime192v1.sage`\r\n* EC key generation: `eckeygen.sage`\r\n* ECDSA signature generation and verification `ecdsa.sage`\r\n\r\nYou can view and try the `ectest.sage`\r\n\r\n```\r\n$ sage ectest.sage\r\n```\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}